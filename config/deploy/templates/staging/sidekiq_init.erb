#!/bin/bash
### BEGIN INIT INFO
# Provides:          sidekiq Init script for loventine
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Manage sidekiq process
# Description: Start, stop, restart sidekiq process for a specific application.
### END INIT INFO

# You will need to modify these
APP="<%= fetch(:application) %>_staging"
AS_USER="<%= fetch(:sidekiq_user) %>"
APP_DIR="<%= current_path %>"

APP_CONFIG="${APP_DIR}/config"
CONFIG_FILE="${APP_CONFIG}/sidekiq.yml"
LOG_FILE="$APP_DIR/log/sidekiq.log"
LOCK_FILE="$APP_DIR/log/${APP}-lock"
PID_FILE="<%= fetch(:sidekiq_pid) %>"
GEMFILE="$APP_DIR/Gemfile"
SIDEKIQ="sidekiq"
APP_ENV="staging"
BUNDLE="bundle"

START_CMD="$BUNDLE exec $SIDEKIQ -C $CONFIG_FILE -e $APP_ENV -P $PID_FILE"
CMD="cd ${APP_DIR}; ${START_CMD} >> ${LOG_FILE} 2>&1 &"

RETVAL=0


start() {

  status
  if [ $? -eq 1 ]; then

    [ `id -u` == '0' ] || (echo "$SIDEKIQ runs as root only .."; exit 5)
    [ -d $APP_DIR ] || (echo "$APP_DIR not found!.. Exiting"; exit 6)
    cd $APP_DIR
    echo "Starting $SIDEKIQ message processor .. "

    su -c "$CMD" - $AS_USER

    RETVAL=$?
    #Sleeping for 8 seconds for process to be precisely visible in process table - See status ()
    sleep 8
    [ $RETVAL -eq 0 ] && touch $LOCK_FILE
    return $RETVAL
  else
    echo "$SIDEKIQ message processor is already running .. "
  fi

}

stop() {
  echo "Stopping $SIDEKIQ message processor .."
  SIG="INT"
  kill -$SIG `cat $PID_FILE`
  RETVAL=$?
  [ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
  return $RETVAL
}

status() {
  ps -ef | grep "sidekiq [0-9].[0-9].[0-9] $APP" | grep 'of 5 busy' | grep -v grep
  return $?
}


case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status

    if [ $? -eq 0 ]; then
      echo "$SIDEKIQ message processor is running .."
      RETVAL=0
    else
      echo "$SIDEKIQ message processor is stopped .."
      RETVAL=1
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 0
    ;;
esac
exit $RETVAL
